name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  id-token: write
  pages: write
  deployments: write
  pull-requests: write

env:
  BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        node-version: [20.x]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-start-period 15s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/app

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          PNPM_CONFIG_PRODUCTION: false

      - name: Ensure BETTER_AUTH_SECRET
        run: |
          if [ -z "${{ secrets.BETTER_AUTH_SECRET }}" ]; then
            echo "BETTER_AUTH_SECRET=$(openssl rand -hex 32)" >> "$GITHUB_ENV"
          else
            echo "BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}" >> "$GITHUB_ENV"
          fi

      - name: Push migrations
        run: pnpm db:push

      - name: Lint
        run: pnpm lint

      - name: Build
        env:
          BUILD_PHASE: true
        run: pnpm build
